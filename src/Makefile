# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/buckey
pkgincludedir = $(includedir)/buckey
pkglibdir = $(libdir)/buckey
pkglibexecdir = $(libexecdir)/buckey
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = buckey$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_buckey_OBJECTS = core/buckey-Mode.$(OBJEXT) \
	core/buckey-Service.$(OBJEXT) \
	core/buckey-PromptResult.$(OBJEXT) \
	core/buckey-EventData.$(OBJEXT) \
	core/buckey-OutputEventData.$(OBJEXT) \
	core/buckey-ModeControlEventData.$(OBJEXT) \
	core/buckey-ServiceControlEventData.$(OBJEXT) \
	core/buckey-EventSource.$(OBJEXT) \
	core/buckey-DynamicGrammar.$(OBJEXT) \
	core/buckey-EchoMode.$(OBJEXT) core/buckey-CoreMode.$(OBJEXT) \
	tts/buckey-SpeechPreparedEventData.$(OBJEXT) \
	tts/buckey-AsyncSpeechRequestEventData.$(OBJEXT) \
	tts/buckey-TTSService.$(OBJEXT) \
	tts/buckey-MimicTTSService.$(OBJEXT) \
	filters/buckey-StringHelper.$(OBJEXT) \
	filters/buckey-TextFilter.$(OBJEXT) \
	filters/buckey-PerWordSingleReplacementFilter.$(OBJEXT) \
	sphinx/buckey-HypothesisEventData.$(OBJEXT) \
	sphinx/buckey-SphinxDecoder.$(OBJEXT) \
	sphinx/buckey-SphinxService.$(OBJEXT) \
	sphinx/buckey-SphinxMode.$(OBJEXT) \
	core/buckey-Buckey.$(OBJEXT) buckey-main.$(OBJEXT)
buckey_OBJECTS = $(am_buckey_OBJECTS)
buckey_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
buckey_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(buckey_SOURCES)
DIST_SOURCES = $(buckey_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/tyler/Documents/Programming/Projects/Buckey/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/tyler/Documents/Programming/Projects/Buckey/missing autoconf
AUTOHEADER = ${SHELL} /home/tyler/Documents/Programming/Projects/Buckey/missing autoheader
AUTOMAKE = ${SHELL} /home/tyler/Documents/Programming/Projects/Buckey/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CPPFSLD = -lcppfs
CPPFS_INCLUDE = /usr/local/include/cppfs
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
HAVE_PKGCONFIG = yes
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JSGFLD = -L/home/tyler/Documents/Programming/Projects/JSGFKit_Plus_Plus/lib/ -lJSGF_Plus_Plus
JSGF_CPP_INCLUDE = /home/tyler/Documents/Programming/Projects/JSGFKit_Plus_Plus/include/
LDFLAGS = 
LIBOBJS = 
LIBS = -lsphinxbase -lpocketsphinx 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/tyler/Documents/Programming/Projects/Buckey/missing makeinfo
MIMICLD = -L/usr/local/lib -lttsmimic_lang_cmu_us_kal -lttsmimic_lang_cmu_time_awb -lttsmimic_lang_cmu_us_kal16 -lttsmimic_lang_cmu_us_awb -lttsmimic_lang_cmu_us_rms -lttsmimic_lang_cmu_us_slt -lttsmimic_lang_cmu_us_slt_hts -lttsmimic_lang_vid_gb_ap -lttsmimic_lang_cmulex -lttsmimic_lang_cmu_indic_lex -lttsmimic_lang_cmu_grapheme_lex -lttsmimic_lang_cmu_grapheme_lang -lttsmimic_lang_cmu_indic_lang -lttsmimic_lang_usenglish -lttsmimic_lang_all_langs -lttsmimic_lang_all_voices -lttsmimic -lpcre2-8 -lasound  
MIMIC_INCLUDE = -I/usr/local/include/ttsmimic -I/usr/local/include/ttsmimic/lang -I/usr/local/include -I/usr/include/alsa  
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = buckey
PACKAGE_BUGREPORT = tylersengia@gmail.com
PACKAGE_NAME = buckey
PACKAGE_STRING = buckey 1.0.0
PACKAGE_TARNAME = buckey
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
SPHINXLD = -L/usr/local/lib -lpocketsphinx -lsphinxbase -lsphinxad -lasound -lpthread -lm  
SPHINX_INCLUDE = -I/usr/local/include -I/usr/local/include/sphinxbase -I/usr/local/include/pocketsphinx  
STRIP = 
VERSION = 1.0.0
YAMLLD = -lyaml-cpp  
abs_builddir = /home/tyler/Documents/Programming/Projects/Buckey/src
abs_srcdir = /home/tyler/Documents/Programming/Projects/Buckey/src
abs_top_builddir = /home/tyler/Documents/Programming/Projects/Buckey
abs_top_srcdir = /home/tyler/Documents/Programming/Projects/Buckey
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tyler/Documents/Programming/Projects/Buckey/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
buckey_SOURCES = core/Mode.cpp core/Service.cpp core/PromptResult.cpp core/EventData.cpp core/OutputEventData.cpp core/ModeControlEventData.cpp core/ServiceControlEventData.cpp core/EventSource.cpp \
core/DynamicGrammar.cpp core/EchoMode.cpp core/CoreMode.cpp \
tts/SpeechPreparedEventData.cpp tts/AsyncSpeechRequestEventData.cpp tts/TTSService.cpp tts/MimicTTSService.cpp \
filters/StringHelper.cpp filters/TextFilter.cpp filters/PerWordSingleReplacementFilter.cpp \
sphinx/HypothesisEventData.cpp sphinx/SphinxDecoder.cpp sphinx/SphinxService.cpp sphinx/SphinxMode.cpp \
core/Buckey.cpp main.cpp

SUBDIRS = . core tts sphinx filters

#Includes for main program
buckey_CPPFLAGS = -I$(top_srcdir)/include/ -I$(top_srcdir)/include/core/ -I$(top_srcdir)/include/filters/ -I$(top_srcdir)/include/tts/ -I$(top_srcdir)/include/sphinx/ $(SPHINX_INCLUDE) $(MIMIC_INCLUDE) -I$(JSGF_CPP_INCLUDE) -I$(CPPFS_INCLUDE)
AM_LDFLAGS = -lpthread $(SPHINXLD) $(YAMLLD) $(MIMICLD) $(CPPFSLD)
LDADD = $(JSGFLD) $(MIMICLD)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
core/$(am__dirstamp):
	@$(MKDIR_P) core
	@: > core/$(am__dirstamp)
core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) core/$(DEPDIR)
	@: > core/$(DEPDIR)/$(am__dirstamp)
core/buckey-Mode.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-Service.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-PromptResult.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-EventData.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-OutputEventData.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-ModeControlEventData.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-ServiceControlEventData.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-EventSource.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-DynamicGrammar.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-EchoMode.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
core/buckey-CoreMode.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)
tts/$(am__dirstamp):
	@$(MKDIR_P) tts
	@: > tts/$(am__dirstamp)
tts/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tts/$(DEPDIR)
	@: > tts/$(DEPDIR)/$(am__dirstamp)
tts/buckey-SpeechPreparedEventData.$(OBJEXT): tts/$(am__dirstamp) \
	tts/$(DEPDIR)/$(am__dirstamp)
tts/buckey-AsyncSpeechRequestEventData.$(OBJEXT): tts/$(am__dirstamp) \
	tts/$(DEPDIR)/$(am__dirstamp)
tts/buckey-TTSService.$(OBJEXT): tts/$(am__dirstamp) \
	tts/$(DEPDIR)/$(am__dirstamp)
tts/buckey-MimicTTSService.$(OBJEXT): tts/$(am__dirstamp) \
	tts/$(DEPDIR)/$(am__dirstamp)
filters/$(am__dirstamp):
	@$(MKDIR_P) filters
	@: > filters/$(am__dirstamp)
filters/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) filters/$(DEPDIR)
	@: > filters/$(DEPDIR)/$(am__dirstamp)
filters/buckey-StringHelper.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)
filters/buckey-TextFilter.$(OBJEXT): filters/$(am__dirstamp) \
	filters/$(DEPDIR)/$(am__dirstamp)
filters/buckey-PerWordSingleReplacementFilter.$(OBJEXT):  \
	filters/$(am__dirstamp) filters/$(DEPDIR)/$(am__dirstamp)
sphinx/$(am__dirstamp):
	@$(MKDIR_P) sphinx
	@: > sphinx/$(am__dirstamp)
sphinx/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sphinx/$(DEPDIR)
	@: > sphinx/$(DEPDIR)/$(am__dirstamp)
sphinx/buckey-HypothesisEventData.$(OBJEXT): sphinx/$(am__dirstamp) \
	sphinx/$(DEPDIR)/$(am__dirstamp)
sphinx/buckey-SphinxDecoder.$(OBJEXT): sphinx/$(am__dirstamp) \
	sphinx/$(DEPDIR)/$(am__dirstamp)
sphinx/buckey-SphinxService.$(OBJEXT): sphinx/$(am__dirstamp) \
	sphinx/$(DEPDIR)/$(am__dirstamp)
sphinx/buckey-SphinxMode.$(OBJEXT): sphinx/$(am__dirstamp) \
	sphinx/$(DEPDIR)/$(am__dirstamp)
core/buckey-Buckey.$(OBJEXT): core/$(am__dirstamp) \
	core/$(DEPDIR)/$(am__dirstamp)

buckey$(EXEEXT): $(buckey_OBJECTS) $(buckey_DEPENDENCIES) $(EXTRA_buckey_DEPENDENCIES) 
	@rm -f buckey$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(buckey_OBJECTS) $(buckey_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f core/*.$(OBJEXT)
	-rm -f filters/*.$(OBJEXT)
	-rm -f sphinx/*.$(OBJEXT)
	-rm -f tts/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/buckey-main.Po
include core/$(DEPDIR)/buckey-Buckey.Po
include core/$(DEPDIR)/buckey-CoreMode.Po
include core/$(DEPDIR)/buckey-DynamicGrammar.Po
include core/$(DEPDIR)/buckey-EchoMode.Po
include core/$(DEPDIR)/buckey-EventData.Po
include core/$(DEPDIR)/buckey-EventSource.Po
include core/$(DEPDIR)/buckey-Mode.Po
include core/$(DEPDIR)/buckey-ModeControlEventData.Po
include core/$(DEPDIR)/buckey-OutputEventData.Po
include core/$(DEPDIR)/buckey-PromptResult.Po
include core/$(DEPDIR)/buckey-Service.Po
include core/$(DEPDIR)/buckey-ServiceControlEventData.Po
include filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Po
include filters/$(DEPDIR)/buckey-StringHelper.Po
include filters/$(DEPDIR)/buckey-TextFilter.Po
include sphinx/$(DEPDIR)/buckey-HypothesisEventData.Po
include sphinx/$(DEPDIR)/buckey-SphinxDecoder.Po
include sphinx/$(DEPDIR)/buckey-SphinxMode.Po
include sphinx/$(DEPDIR)/buckey-SphinxService.Po
include tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Po
include tts/$(DEPDIR)/buckey-MimicTTSService.Po
include tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Po
include tts/$(DEPDIR)/buckey-TTSService.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

core/buckey-Mode.o: core/Mode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-Mode.o -MD -MP -MF core/$(DEPDIR)/buckey-Mode.Tpo -c -o core/buckey-Mode.o `test -f 'core/Mode.cpp' || echo '$(srcdir)/'`core/Mode.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-Mode.Tpo core/$(DEPDIR)/buckey-Mode.Po
#	$(AM_V_CXX)source='core/Mode.cpp' object='core/buckey-Mode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-Mode.o `test -f 'core/Mode.cpp' || echo '$(srcdir)/'`core/Mode.cpp

core/buckey-Mode.obj: core/Mode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-Mode.obj -MD -MP -MF core/$(DEPDIR)/buckey-Mode.Tpo -c -o core/buckey-Mode.obj `if test -f 'core/Mode.cpp'; then $(CYGPATH_W) 'core/Mode.cpp'; else $(CYGPATH_W) '$(srcdir)/core/Mode.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-Mode.Tpo core/$(DEPDIR)/buckey-Mode.Po
#	$(AM_V_CXX)source='core/Mode.cpp' object='core/buckey-Mode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-Mode.obj `if test -f 'core/Mode.cpp'; then $(CYGPATH_W) 'core/Mode.cpp'; else $(CYGPATH_W) '$(srcdir)/core/Mode.cpp'; fi`

core/buckey-Service.o: core/Service.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-Service.o -MD -MP -MF core/$(DEPDIR)/buckey-Service.Tpo -c -o core/buckey-Service.o `test -f 'core/Service.cpp' || echo '$(srcdir)/'`core/Service.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-Service.Tpo core/$(DEPDIR)/buckey-Service.Po
#	$(AM_V_CXX)source='core/Service.cpp' object='core/buckey-Service.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-Service.o `test -f 'core/Service.cpp' || echo '$(srcdir)/'`core/Service.cpp

core/buckey-Service.obj: core/Service.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-Service.obj -MD -MP -MF core/$(DEPDIR)/buckey-Service.Tpo -c -o core/buckey-Service.obj `if test -f 'core/Service.cpp'; then $(CYGPATH_W) 'core/Service.cpp'; else $(CYGPATH_W) '$(srcdir)/core/Service.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-Service.Tpo core/$(DEPDIR)/buckey-Service.Po
#	$(AM_V_CXX)source='core/Service.cpp' object='core/buckey-Service.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-Service.obj `if test -f 'core/Service.cpp'; then $(CYGPATH_W) 'core/Service.cpp'; else $(CYGPATH_W) '$(srcdir)/core/Service.cpp'; fi`

core/buckey-PromptResult.o: core/PromptResult.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-PromptResult.o -MD -MP -MF core/$(DEPDIR)/buckey-PromptResult.Tpo -c -o core/buckey-PromptResult.o `test -f 'core/PromptResult.cpp' || echo '$(srcdir)/'`core/PromptResult.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-PromptResult.Tpo core/$(DEPDIR)/buckey-PromptResult.Po
#	$(AM_V_CXX)source='core/PromptResult.cpp' object='core/buckey-PromptResult.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-PromptResult.o `test -f 'core/PromptResult.cpp' || echo '$(srcdir)/'`core/PromptResult.cpp

core/buckey-PromptResult.obj: core/PromptResult.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-PromptResult.obj -MD -MP -MF core/$(DEPDIR)/buckey-PromptResult.Tpo -c -o core/buckey-PromptResult.obj `if test -f 'core/PromptResult.cpp'; then $(CYGPATH_W) 'core/PromptResult.cpp'; else $(CYGPATH_W) '$(srcdir)/core/PromptResult.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-PromptResult.Tpo core/$(DEPDIR)/buckey-PromptResult.Po
#	$(AM_V_CXX)source='core/PromptResult.cpp' object='core/buckey-PromptResult.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-PromptResult.obj `if test -f 'core/PromptResult.cpp'; then $(CYGPATH_W) 'core/PromptResult.cpp'; else $(CYGPATH_W) '$(srcdir)/core/PromptResult.cpp'; fi`

core/buckey-EventData.o: core/EventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-EventData.o -MD -MP -MF core/$(DEPDIR)/buckey-EventData.Tpo -c -o core/buckey-EventData.o `test -f 'core/EventData.cpp' || echo '$(srcdir)/'`core/EventData.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-EventData.Tpo core/$(DEPDIR)/buckey-EventData.Po
#	$(AM_V_CXX)source='core/EventData.cpp' object='core/buckey-EventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-EventData.o `test -f 'core/EventData.cpp' || echo '$(srcdir)/'`core/EventData.cpp

core/buckey-EventData.obj: core/EventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-EventData.obj -MD -MP -MF core/$(DEPDIR)/buckey-EventData.Tpo -c -o core/buckey-EventData.obj `if test -f 'core/EventData.cpp'; then $(CYGPATH_W) 'core/EventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/EventData.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-EventData.Tpo core/$(DEPDIR)/buckey-EventData.Po
#	$(AM_V_CXX)source='core/EventData.cpp' object='core/buckey-EventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-EventData.obj `if test -f 'core/EventData.cpp'; then $(CYGPATH_W) 'core/EventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/EventData.cpp'; fi`

core/buckey-OutputEventData.o: core/OutputEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-OutputEventData.o -MD -MP -MF core/$(DEPDIR)/buckey-OutputEventData.Tpo -c -o core/buckey-OutputEventData.o `test -f 'core/OutputEventData.cpp' || echo '$(srcdir)/'`core/OutputEventData.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-OutputEventData.Tpo core/$(DEPDIR)/buckey-OutputEventData.Po
#	$(AM_V_CXX)source='core/OutputEventData.cpp' object='core/buckey-OutputEventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-OutputEventData.o `test -f 'core/OutputEventData.cpp' || echo '$(srcdir)/'`core/OutputEventData.cpp

core/buckey-OutputEventData.obj: core/OutputEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-OutputEventData.obj -MD -MP -MF core/$(DEPDIR)/buckey-OutputEventData.Tpo -c -o core/buckey-OutputEventData.obj `if test -f 'core/OutputEventData.cpp'; then $(CYGPATH_W) 'core/OutputEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/OutputEventData.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-OutputEventData.Tpo core/$(DEPDIR)/buckey-OutputEventData.Po
#	$(AM_V_CXX)source='core/OutputEventData.cpp' object='core/buckey-OutputEventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-OutputEventData.obj `if test -f 'core/OutputEventData.cpp'; then $(CYGPATH_W) 'core/OutputEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/OutputEventData.cpp'; fi`

core/buckey-ModeControlEventData.o: core/ModeControlEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-ModeControlEventData.o -MD -MP -MF core/$(DEPDIR)/buckey-ModeControlEventData.Tpo -c -o core/buckey-ModeControlEventData.o `test -f 'core/ModeControlEventData.cpp' || echo '$(srcdir)/'`core/ModeControlEventData.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-ModeControlEventData.Tpo core/$(DEPDIR)/buckey-ModeControlEventData.Po
#	$(AM_V_CXX)source='core/ModeControlEventData.cpp' object='core/buckey-ModeControlEventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-ModeControlEventData.o `test -f 'core/ModeControlEventData.cpp' || echo '$(srcdir)/'`core/ModeControlEventData.cpp

core/buckey-ModeControlEventData.obj: core/ModeControlEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-ModeControlEventData.obj -MD -MP -MF core/$(DEPDIR)/buckey-ModeControlEventData.Tpo -c -o core/buckey-ModeControlEventData.obj `if test -f 'core/ModeControlEventData.cpp'; then $(CYGPATH_W) 'core/ModeControlEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/ModeControlEventData.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-ModeControlEventData.Tpo core/$(DEPDIR)/buckey-ModeControlEventData.Po
#	$(AM_V_CXX)source='core/ModeControlEventData.cpp' object='core/buckey-ModeControlEventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-ModeControlEventData.obj `if test -f 'core/ModeControlEventData.cpp'; then $(CYGPATH_W) 'core/ModeControlEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/ModeControlEventData.cpp'; fi`

core/buckey-ServiceControlEventData.o: core/ServiceControlEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-ServiceControlEventData.o -MD -MP -MF core/$(DEPDIR)/buckey-ServiceControlEventData.Tpo -c -o core/buckey-ServiceControlEventData.o `test -f 'core/ServiceControlEventData.cpp' || echo '$(srcdir)/'`core/ServiceControlEventData.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-ServiceControlEventData.Tpo core/$(DEPDIR)/buckey-ServiceControlEventData.Po
#	$(AM_V_CXX)source='core/ServiceControlEventData.cpp' object='core/buckey-ServiceControlEventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-ServiceControlEventData.o `test -f 'core/ServiceControlEventData.cpp' || echo '$(srcdir)/'`core/ServiceControlEventData.cpp

core/buckey-ServiceControlEventData.obj: core/ServiceControlEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-ServiceControlEventData.obj -MD -MP -MF core/$(DEPDIR)/buckey-ServiceControlEventData.Tpo -c -o core/buckey-ServiceControlEventData.obj `if test -f 'core/ServiceControlEventData.cpp'; then $(CYGPATH_W) 'core/ServiceControlEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/ServiceControlEventData.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-ServiceControlEventData.Tpo core/$(DEPDIR)/buckey-ServiceControlEventData.Po
#	$(AM_V_CXX)source='core/ServiceControlEventData.cpp' object='core/buckey-ServiceControlEventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-ServiceControlEventData.obj `if test -f 'core/ServiceControlEventData.cpp'; then $(CYGPATH_W) 'core/ServiceControlEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/core/ServiceControlEventData.cpp'; fi`

core/buckey-EventSource.o: core/EventSource.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-EventSource.o -MD -MP -MF core/$(DEPDIR)/buckey-EventSource.Tpo -c -o core/buckey-EventSource.o `test -f 'core/EventSource.cpp' || echo '$(srcdir)/'`core/EventSource.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-EventSource.Tpo core/$(DEPDIR)/buckey-EventSource.Po
#	$(AM_V_CXX)source='core/EventSource.cpp' object='core/buckey-EventSource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-EventSource.o `test -f 'core/EventSource.cpp' || echo '$(srcdir)/'`core/EventSource.cpp

core/buckey-EventSource.obj: core/EventSource.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-EventSource.obj -MD -MP -MF core/$(DEPDIR)/buckey-EventSource.Tpo -c -o core/buckey-EventSource.obj `if test -f 'core/EventSource.cpp'; then $(CYGPATH_W) 'core/EventSource.cpp'; else $(CYGPATH_W) '$(srcdir)/core/EventSource.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-EventSource.Tpo core/$(DEPDIR)/buckey-EventSource.Po
#	$(AM_V_CXX)source='core/EventSource.cpp' object='core/buckey-EventSource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-EventSource.obj `if test -f 'core/EventSource.cpp'; then $(CYGPATH_W) 'core/EventSource.cpp'; else $(CYGPATH_W) '$(srcdir)/core/EventSource.cpp'; fi`

core/buckey-DynamicGrammar.o: core/DynamicGrammar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-DynamicGrammar.o -MD -MP -MF core/$(DEPDIR)/buckey-DynamicGrammar.Tpo -c -o core/buckey-DynamicGrammar.o `test -f 'core/DynamicGrammar.cpp' || echo '$(srcdir)/'`core/DynamicGrammar.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-DynamicGrammar.Tpo core/$(DEPDIR)/buckey-DynamicGrammar.Po
#	$(AM_V_CXX)source='core/DynamicGrammar.cpp' object='core/buckey-DynamicGrammar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-DynamicGrammar.o `test -f 'core/DynamicGrammar.cpp' || echo '$(srcdir)/'`core/DynamicGrammar.cpp

core/buckey-DynamicGrammar.obj: core/DynamicGrammar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-DynamicGrammar.obj -MD -MP -MF core/$(DEPDIR)/buckey-DynamicGrammar.Tpo -c -o core/buckey-DynamicGrammar.obj `if test -f 'core/DynamicGrammar.cpp'; then $(CYGPATH_W) 'core/DynamicGrammar.cpp'; else $(CYGPATH_W) '$(srcdir)/core/DynamicGrammar.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-DynamicGrammar.Tpo core/$(DEPDIR)/buckey-DynamicGrammar.Po
#	$(AM_V_CXX)source='core/DynamicGrammar.cpp' object='core/buckey-DynamicGrammar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-DynamicGrammar.obj `if test -f 'core/DynamicGrammar.cpp'; then $(CYGPATH_W) 'core/DynamicGrammar.cpp'; else $(CYGPATH_W) '$(srcdir)/core/DynamicGrammar.cpp'; fi`

core/buckey-EchoMode.o: core/EchoMode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-EchoMode.o -MD -MP -MF core/$(DEPDIR)/buckey-EchoMode.Tpo -c -o core/buckey-EchoMode.o `test -f 'core/EchoMode.cpp' || echo '$(srcdir)/'`core/EchoMode.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-EchoMode.Tpo core/$(DEPDIR)/buckey-EchoMode.Po
#	$(AM_V_CXX)source='core/EchoMode.cpp' object='core/buckey-EchoMode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-EchoMode.o `test -f 'core/EchoMode.cpp' || echo '$(srcdir)/'`core/EchoMode.cpp

core/buckey-EchoMode.obj: core/EchoMode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-EchoMode.obj -MD -MP -MF core/$(DEPDIR)/buckey-EchoMode.Tpo -c -o core/buckey-EchoMode.obj `if test -f 'core/EchoMode.cpp'; then $(CYGPATH_W) 'core/EchoMode.cpp'; else $(CYGPATH_W) '$(srcdir)/core/EchoMode.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-EchoMode.Tpo core/$(DEPDIR)/buckey-EchoMode.Po
#	$(AM_V_CXX)source='core/EchoMode.cpp' object='core/buckey-EchoMode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-EchoMode.obj `if test -f 'core/EchoMode.cpp'; then $(CYGPATH_W) 'core/EchoMode.cpp'; else $(CYGPATH_W) '$(srcdir)/core/EchoMode.cpp'; fi`

core/buckey-CoreMode.o: core/CoreMode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-CoreMode.o -MD -MP -MF core/$(DEPDIR)/buckey-CoreMode.Tpo -c -o core/buckey-CoreMode.o `test -f 'core/CoreMode.cpp' || echo '$(srcdir)/'`core/CoreMode.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-CoreMode.Tpo core/$(DEPDIR)/buckey-CoreMode.Po
#	$(AM_V_CXX)source='core/CoreMode.cpp' object='core/buckey-CoreMode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-CoreMode.o `test -f 'core/CoreMode.cpp' || echo '$(srcdir)/'`core/CoreMode.cpp

core/buckey-CoreMode.obj: core/CoreMode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-CoreMode.obj -MD -MP -MF core/$(DEPDIR)/buckey-CoreMode.Tpo -c -o core/buckey-CoreMode.obj `if test -f 'core/CoreMode.cpp'; then $(CYGPATH_W) 'core/CoreMode.cpp'; else $(CYGPATH_W) '$(srcdir)/core/CoreMode.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-CoreMode.Tpo core/$(DEPDIR)/buckey-CoreMode.Po
#	$(AM_V_CXX)source='core/CoreMode.cpp' object='core/buckey-CoreMode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-CoreMode.obj `if test -f 'core/CoreMode.cpp'; then $(CYGPATH_W) 'core/CoreMode.cpp'; else $(CYGPATH_W) '$(srcdir)/core/CoreMode.cpp'; fi`

tts/buckey-SpeechPreparedEventData.o: tts/SpeechPreparedEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-SpeechPreparedEventData.o -MD -MP -MF tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Tpo -c -o tts/buckey-SpeechPreparedEventData.o `test -f 'tts/SpeechPreparedEventData.cpp' || echo '$(srcdir)/'`tts/SpeechPreparedEventData.cpp
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Tpo tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Po
#	$(AM_V_CXX)source='tts/SpeechPreparedEventData.cpp' object='tts/buckey-SpeechPreparedEventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-SpeechPreparedEventData.o `test -f 'tts/SpeechPreparedEventData.cpp' || echo '$(srcdir)/'`tts/SpeechPreparedEventData.cpp

tts/buckey-SpeechPreparedEventData.obj: tts/SpeechPreparedEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-SpeechPreparedEventData.obj -MD -MP -MF tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Tpo -c -o tts/buckey-SpeechPreparedEventData.obj `if test -f 'tts/SpeechPreparedEventData.cpp'; then $(CYGPATH_W) 'tts/SpeechPreparedEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/SpeechPreparedEventData.cpp'; fi`
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Tpo tts/$(DEPDIR)/buckey-SpeechPreparedEventData.Po
#	$(AM_V_CXX)source='tts/SpeechPreparedEventData.cpp' object='tts/buckey-SpeechPreparedEventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-SpeechPreparedEventData.obj `if test -f 'tts/SpeechPreparedEventData.cpp'; then $(CYGPATH_W) 'tts/SpeechPreparedEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/SpeechPreparedEventData.cpp'; fi`

tts/buckey-AsyncSpeechRequestEventData.o: tts/AsyncSpeechRequestEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-AsyncSpeechRequestEventData.o -MD -MP -MF tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Tpo -c -o tts/buckey-AsyncSpeechRequestEventData.o `test -f 'tts/AsyncSpeechRequestEventData.cpp' || echo '$(srcdir)/'`tts/AsyncSpeechRequestEventData.cpp
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Tpo tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Po
#	$(AM_V_CXX)source='tts/AsyncSpeechRequestEventData.cpp' object='tts/buckey-AsyncSpeechRequestEventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-AsyncSpeechRequestEventData.o `test -f 'tts/AsyncSpeechRequestEventData.cpp' || echo '$(srcdir)/'`tts/AsyncSpeechRequestEventData.cpp

tts/buckey-AsyncSpeechRequestEventData.obj: tts/AsyncSpeechRequestEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-AsyncSpeechRequestEventData.obj -MD -MP -MF tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Tpo -c -o tts/buckey-AsyncSpeechRequestEventData.obj `if test -f 'tts/AsyncSpeechRequestEventData.cpp'; then $(CYGPATH_W) 'tts/AsyncSpeechRequestEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/AsyncSpeechRequestEventData.cpp'; fi`
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Tpo tts/$(DEPDIR)/buckey-AsyncSpeechRequestEventData.Po
#	$(AM_V_CXX)source='tts/AsyncSpeechRequestEventData.cpp' object='tts/buckey-AsyncSpeechRequestEventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-AsyncSpeechRequestEventData.obj `if test -f 'tts/AsyncSpeechRequestEventData.cpp'; then $(CYGPATH_W) 'tts/AsyncSpeechRequestEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/AsyncSpeechRequestEventData.cpp'; fi`

tts/buckey-TTSService.o: tts/TTSService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-TTSService.o -MD -MP -MF tts/$(DEPDIR)/buckey-TTSService.Tpo -c -o tts/buckey-TTSService.o `test -f 'tts/TTSService.cpp' || echo '$(srcdir)/'`tts/TTSService.cpp
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-TTSService.Tpo tts/$(DEPDIR)/buckey-TTSService.Po
#	$(AM_V_CXX)source='tts/TTSService.cpp' object='tts/buckey-TTSService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-TTSService.o `test -f 'tts/TTSService.cpp' || echo '$(srcdir)/'`tts/TTSService.cpp

tts/buckey-TTSService.obj: tts/TTSService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-TTSService.obj -MD -MP -MF tts/$(DEPDIR)/buckey-TTSService.Tpo -c -o tts/buckey-TTSService.obj `if test -f 'tts/TTSService.cpp'; then $(CYGPATH_W) 'tts/TTSService.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/TTSService.cpp'; fi`
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-TTSService.Tpo tts/$(DEPDIR)/buckey-TTSService.Po
#	$(AM_V_CXX)source='tts/TTSService.cpp' object='tts/buckey-TTSService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-TTSService.obj `if test -f 'tts/TTSService.cpp'; then $(CYGPATH_W) 'tts/TTSService.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/TTSService.cpp'; fi`

tts/buckey-MimicTTSService.o: tts/MimicTTSService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-MimicTTSService.o -MD -MP -MF tts/$(DEPDIR)/buckey-MimicTTSService.Tpo -c -o tts/buckey-MimicTTSService.o `test -f 'tts/MimicTTSService.cpp' || echo '$(srcdir)/'`tts/MimicTTSService.cpp
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-MimicTTSService.Tpo tts/$(DEPDIR)/buckey-MimicTTSService.Po
#	$(AM_V_CXX)source='tts/MimicTTSService.cpp' object='tts/buckey-MimicTTSService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-MimicTTSService.o `test -f 'tts/MimicTTSService.cpp' || echo '$(srcdir)/'`tts/MimicTTSService.cpp

tts/buckey-MimicTTSService.obj: tts/MimicTTSService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tts/buckey-MimicTTSService.obj -MD -MP -MF tts/$(DEPDIR)/buckey-MimicTTSService.Tpo -c -o tts/buckey-MimicTTSService.obj `if test -f 'tts/MimicTTSService.cpp'; then $(CYGPATH_W) 'tts/MimicTTSService.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/MimicTTSService.cpp'; fi`
	$(AM_V_at)$(am__mv) tts/$(DEPDIR)/buckey-MimicTTSService.Tpo tts/$(DEPDIR)/buckey-MimicTTSService.Po
#	$(AM_V_CXX)source='tts/MimicTTSService.cpp' object='tts/buckey-MimicTTSService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tts/buckey-MimicTTSService.obj `if test -f 'tts/MimicTTSService.cpp'; then $(CYGPATH_W) 'tts/MimicTTSService.cpp'; else $(CYGPATH_W) '$(srcdir)/tts/MimicTTSService.cpp'; fi`

filters/buckey-StringHelper.o: filters/StringHelper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/buckey-StringHelper.o -MD -MP -MF filters/$(DEPDIR)/buckey-StringHelper.Tpo -c -o filters/buckey-StringHelper.o `test -f 'filters/StringHelper.cpp' || echo '$(srcdir)/'`filters/StringHelper.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/buckey-StringHelper.Tpo filters/$(DEPDIR)/buckey-StringHelper.Po
#	$(AM_V_CXX)source='filters/StringHelper.cpp' object='filters/buckey-StringHelper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/buckey-StringHelper.o `test -f 'filters/StringHelper.cpp' || echo '$(srcdir)/'`filters/StringHelper.cpp

filters/buckey-StringHelper.obj: filters/StringHelper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/buckey-StringHelper.obj -MD -MP -MF filters/$(DEPDIR)/buckey-StringHelper.Tpo -c -o filters/buckey-StringHelper.obj `if test -f 'filters/StringHelper.cpp'; then $(CYGPATH_W) 'filters/StringHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/StringHelper.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/buckey-StringHelper.Tpo filters/$(DEPDIR)/buckey-StringHelper.Po
#	$(AM_V_CXX)source='filters/StringHelper.cpp' object='filters/buckey-StringHelper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/buckey-StringHelper.obj `if test -f 'filters/StringHelper.cpp'; then $(CYGPATH_W) 'filters/StringHelper.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/StringHelper.cpp'; fi`

filters/buckey-TextFilter.o: filters/TextFilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/buckey-TextFilter.o -MD -MP -MF filters/$(DEPDIR)/buckey-TextFilter.Tpo -c -o filters/buckey-TextFilter.o `test -f 'filters/TextFilter.cpp' || echo '$(srcdir)/'`filters/TextFilter.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/buckey-TextFilter.Tpo filters/$(DEPDIR)/buckey-TextFilter.Po
#	$(AM_V_CXX)source='filters/TextFilter.cpp' object='filters/buckey-TextFilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/buckey-TextFilter.o `test -f 'filters/TextFilter.cpp' || echo '$(srcdir)/'`filters/TextFilter.cpp

filters/buckey-TextFilter.obj: filters/TextFilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/buckey-TextFilter.obj -MD -MP -MF filters/$(DEPDIR)/buckey-TextFilter.Tpo -c -o filters/buckey-TextFilter.obj `if test -f 'filters/TextFilter.cpp'; then $(CYGPATH_W) 'filters/TextFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/TextFilter.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/buckey-TextFilter.Tpo filters/$(DEPDIR)/buckey-TextFilter.Po
#	$(AM_V_CXX)source='filters/TextFilter.cpp' object='filters/buckey-TextFilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/buckey-TextFilter.obj `if test -f 'filters/TextFilter.cpp'; then $(CYGPATH_W) 'filters/TextFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/TextFilter.cpp'; fi`

filters/buckey-PerWordSingleReplacementFilter.o: filters/PerWordSingleReplacementFilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/buckey-PerWordSingleReplacementFilter.o -MD -MP -MF filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Tpo -c -o filters/buckey-PerWordSingleReplacementFilter.o `test -f 'filters/PerWordSingleReplacementFilter.cpp' || echo '$(srcdir)/'`filters/PerWordSingleReplacementFilter.cpp
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Tpo filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Po
#	$(AM_V_CXX)source='filters/PerWordSingleReplacementFilter.cpp' object='filters/buckey-PerWordSingleReplacementFilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/buckey-PerWordSingleReplacementFilter.o `test -f 'filters/PerWordSingleReplacementFilter.cpp' || echo '$(srcdir)/'`filters/PerWordSingleReplacementFilter.cpp

filters/buckey-PerWordSingleReplacementFilter.obj: filters/PerWordSingleReplacementFilter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT filters/buckey-PerWordSingleReplacementFilter.obj -MD -MP -MF filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Tpo -c -o filters/buckey-PerWordSingleReplacementFilter.obj `if test -f 'filters/PerWordSingleReplacementFilter.cpp'; then $(CYGPATH_W) 'filters/PerWordSingleReplacementFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/PerWordSingleReplacementFilter.cpp'; fi`
	$(AM_V_at)$(am__mv) filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Tpo filters/$(DEPDIR)/buckey-PerWordSingleReplacementFilter.Po
#	$(AM_V_CXX)source='filters/PerWordSingleReplacementFilter.cpp' object='filters/buckey-PerWordSingleReplacementFilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o filters/buckey-PerWordSingleReplacementFilter.obj `if test -f 'filters/PerWordSingleReplacementFilter.cpp'; then $(CYGPATH_W) 'filters/PerWordSingleReplacementFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/filters/PerWordSingleReplacementFilter.cpp'; fi`

sphinx/buckey-HypothesisEventData.o: sphinx/HypothesisEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-HypothesisEventData.o -MD -MP -MF sphinx/$(DEPDIR)/buckey-HypothesisEventData.Tpo -c -o sphinx/buckey-HypothesisEventData.o `test -f 'sphinx/HypothesisEventData.cpp' || echo '$(srcdir)/'`sphinx/HypothesisEventData.cpp
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-HypothesisEventData.Tpo sphinx/$(DEPDIR)/buckey-HypothesisEventData.Po
#	$(AM_V_CXX)source='sphinx/HypothesisEventData.cpp' object='sphinx/buckey-HypothesisEventData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-HypothesisEventData.o `test -f 'sphinx/HypothesisEventData.cpp' || echo '$(srcdir)/'`sphinx/HypothesisEventData.cpp

sphinx/buckey-HypothesisEventData.obj: sphinx/HypothesisEventData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-HypothesisEventData.obj -MD -MP -MF sphinx/$(DEPDIR)/buckey-HypothesisEventData.Tpo -c -o sphinx/buckey-HypothesisEventData.obj `if test -f 'sphinx/HypothesisEventData.cpp'; then $(CYGPATH_W) 'sphinx/HypothesisEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/HypothesisEventData.cpp'; fi`
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-HypothesisEventData.Tpo sphinx/$(DEPDIR)/buckey-HypothesisEventData.Po
#	$(AM_V_CXX)source='sphinx/HypothesisEventData.cpp' object='sphinx/buckey-HypothesisEventData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-HypothesisEventData.obj `if test -f 'sphinx/HypothesisEventData.cpp'; then $(CYGPATH_W) 'sphinx/HypothesisEventData.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/HypothesisEventData.cpp'; fi`

sphinx/buckey-SphinxDecoder.o: sphinx/SphinxDecoder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-SphinxDecoder.o -MD -MP -MF sphinx/$(DEPDIR)/buckey-SphinxDecoder.Tpo -c -o sphinx/buckey-SphinxDecoder.o `test -f 'sphinx/SphinxDecoder.cpp' || echo '$(srcdir)/'`sphinx/SphinxDecoder.cpp
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-SphinxDecoder.Tpo sphinx/$(DEPDIR)/buckey-SphinxDecoder.Po
#	$(AM_V_CXX)source='sphinx/SphinxDecoder.cpp' object='sphinx/buckey-SphinxDecoder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-SphinxDecoder.o `test -f 'sphinx/SphinxDecoder.cpp' || echo '$(srcdir)/'`sphinx/SphinxDecoder.cpp

sphinx/buckey-SphinxDecoder.obj: sphinx/SphinxDecoder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-SphinxDecoder.obj -MD -MP -MF sphinx/$(DEPDIR)/buckey-SphinxDecoder.Tpo -c -o sphinx/buckey-SphinxDecoder.obj `if test -f 'sphinx/SphinxDecoder.cpp'; then $(CYGPATH_W) 'sphinx/SphinxDecoder.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/SphinxDecoder.cpp'; fi`
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-SphinxDecoder.Tpo sphinx/$(DEPDIR)/buckey-SphinxDecoder.Po
#	$(AM_V_CXX)source='sphinx/SphinxDecoder.cpp' object='sphinx/buckey-SphinxDecoder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-SphinxDecoder.obj `if test -f 'sphinx/SphinxDecoder.cpp'; then $(CYGPATH_W) 'sphinx/SphinxDecoder.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/SphinxDecoder.cpp'; fi`

sphinx/buckey-SphinxService.o: sphinx/SphinxService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-SphinxService.o -MD -MP -MF sphinx/$(DEPDIR)/buckey-SphinxService.Tpo -c -o sphinx/buckey-SphinxService.o `test -f 'sphinx/SphinxService.cpp' || echo '$(srcdir)/'`sphinx/SphinxService.cpp
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-SphinxService.Tpo sphinx/$(DEPDIR)/buckey-SphinxService.Po
#	$(AM_V_CXX)source='sphinx/SphinxService.cpp' object='sphinx/buckey-SphinxService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-SphinxService.o `test -f 'sphinx/SphinxService.cpp' || echo '$(srcdir)/'`sphinx/SphinxService.cpp

sphinx/buckey-SphinxService.obj: sphinx/SphinxService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-SphinxService.obj -MD -MP -MF sphinx/$(DEPDIR)/buckey-SphinxService.Tpo -c -o sphinx/buckey-SphinxService.obj `if test -f 'sphinx/SphinxService.cpp'; then $(CYGPATH_W) 'sphinx/SphinxService.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/SphinxService.cpp'; fi`
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-SphinxService.Tpo sphinx/$(DEPDIR)/buckey-SphinxService.Po
#	$(AM_V_CXX)source='sphinx/SphinxService.cpp' object='sphinx/buckey-SphinxService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-SphinxService.obj `if test -f 'sphinx/SphinxService.cpp'; then $(CYGPATH_W) 'sphinx/SphinxService.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/SphinxService.cpp'; fi`

sphinx/buckey-SphinxMode.o: sphinx/SphinxMode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-SphinxMode.o -MD -MP -MF sphinx/$(DEPDIR)/buckey-SphinxMode.Tpo -c -o sphinx/buckey-SphinxMode.o `test -f 'sphinx/SphinxMode.cpp' || echo '$(srcdir)/'`sphinx/SphinxMode.cpp
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-SphinxMode.Tpo sphinx/$(DEPDIR)/buckey-SphinxMode.Po
#	$(AM_V_CXX)source='sphinx/SphinxMode.cpp' object='sphinx/buckey-SphinxMode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-SphinxMode.o `test -f 'sphinx/SphinxMode.cpp' || echo '$(srcdir)/'`sphinx/SphinxMode.cpp

sphinx/buckey-SphinxMode.obj: sphinx/SphinxMode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sphinx/buckey-SphinxMode.obj -MD -MP -MF sphinx/$(DEPDIR)/buckey-SphinxMode.Tpo -c -o sphinx/buckey-SphinxMode.obj `if test -f 'sphinx/SphinxMode.cpp'; then $(CYGPATH_W) 'sphinx/SphinxMode.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/SphinxMode.cpp'; fi`
	$(AM_V_at)$(am__mv) sphinx/$(DEPDIR)/buckey-SphinxMode.Tpo sphinx/$(DEPDIR)/buckey-SphinxMode.Po
#	$(AM_V_CXX)source='sphinx/SphinxMode.cpp' object='sphinx/buckey-SphinxMode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sphinx/buckey-SphinxMode.obj `if test -f 'sphinx/SphinxMode.cpp'; then $(CYGPATH_W) 'sphinx/SphinxMode.cpp'; else $(CYGPATH_W) '$(srcdir)/sphinx/SphinxMode.cpp'; fi`

core/buckey-Buckey.o: core/Buckey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-Buckey.o -MD -MP -MF core/$(DEPDIR)/buckey-Buckey.Tpo -c -o core/buckey-Buckey.o `test -f 'core/Buckey.cpp' || echo '$(srcdir)/'`core/Buckey.cpp
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-Buckey.Tpo core/$(DEPDIR)/buckey-Buckey.Po
#	$(AM_V_CXX)source='core/Buckey.cpp' object='core/buckey-Buckey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-Buckey.o `test -f 'core/Buckey.cpp' || echo '$(srcdir)/'`core/Buckey.cpp

core/buckey-Buckey.obj: core/Buckey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT core/buckey-Buckey.obj -MD -MP -MF core/$(DEPDIR)/buckey-Buckey.Tpo -c -o core/buckey-Buckey.obj `if test -f 'core/Buckey.cpp'; then $(CYGPATH_W) 'core/Buckey.cpp'; else $(CYGPATH_W) '$(srcdir)/core/Buckey.cpp'; fi`
	$(AM_V_at)$(am__mv) core/$(DEPDIR)/buckey-Buckey.Tpo core/$(DEPDIR)/buckey-Buckey.Po
#	$(AM_V_CXX)source='core/Buckey.cpp' object='core/buckey-Buckey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o core/buckey-Buckey.obj `if test -f 'core/Buckey.cpp'; then $(CYGPATH_W) 'core/Buckey.cpp'; else $(CYGPATH_W) '$(srcdir)/core/Buckey.cpp'; fi`

buckey-main.o: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buckey-main.o -MD -MP -MF $(DEPDIR)/buckey-main.Tpo -c -o buckey-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/buckey-main.Tpo $(DEPDIR)/buckey-main.Po
#	$(AM_V_CXX)source='main.cpp' object='buckey-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buckey-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

buckey-main.obj: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buckey-main.obj -MD -MP -MF $(DEPDIR)/buckey-main.Tpo -c -o buckey-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/buckey-main.Tpo $(DEPDIR)/buckey-main.Po
#	$(AM_V_CXX)source='main.cpp' object='buckey-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(buckey_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buckey-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f core/$(DEPDIR)/$(am__dirstamp)
	-rm -f core/$(am__dirstamp)
	-rm -f filters/$(DEPDIR)/$(am__dirstamp)
	-rm -f filters/$(am__dirstamp)
	-rm -f sphinx/$(DEPDIR)/$(am__dirstamp)
	-rm -f sphinx/$(am__dirstamp)
	-rm -f tts/$(DEPDIR)/$(am__dirstamp)
	-rm -f tts/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) core/$(DEPDIR) filters/$(DEPDIR) sphinx/$(DEPDIR) tts/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) core/$(DEPDIR) filters/$(DEPDIR) sphinx/$(DEPDIR) tts/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
